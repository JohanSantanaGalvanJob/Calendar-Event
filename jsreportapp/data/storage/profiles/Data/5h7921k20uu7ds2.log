{"type":"operationStart","subtype":"profile","data":{"_id":"igEAaZ7qyeYTKoRe","timestamp":"2023-01-24T00:48:24.015Z","state":"queued","mode":"standard","creationDate":"2023-01-24T00:48:24.020Z","modificationDate":"2023-01-24T00:48:24.020Z","shortid":"jjaLhU0","$entitySet":"profiles"},"doDiffs":false,"timestamp":1674521304017,"id":"l90qbb5t22vjivy","previousOperationId":null,"operationId":"9xfroxn1gicr72t"}
{"type":"log","level":"info","message":"Render request 5 queued for execution and waiting for available worker","previousOperationId":"9xfroxn1gicr72t","timestamp":1674521304018,"id":"7sdm78vnqjry1i1"}
{"type":"operationStart","subtype":"render","name":"Data","previousOperationId":"9xfroxn1gicr72t","timestamp":1674521304047,"id":"v4blc2ipxhamdmk","previousEventId":"l90qbb5t22vjivy","operationId":"obgwr480cy9pj1k"}
{"type":"log","timestamp":1674521304048,"level":"info","message":"Starting rendering request 5","meta":{"rootId":"5h7921k20uu7ds2","id":"5h7921k20uu7ds2"},"id":"vg2gn4ckj2ssdaq","previousOperationId":"obgwr480cy9pj1k"}
{"type":"log","timestamp":1674521304049,"level":"info","message":"Rendering template { name: Data, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"5h7921k20uu7ds2","id":"5h7921k20uu7ds2"},"id":"7lktnqzmos9o58k","previousOperationId":"obgwr480cy9pj1k"}
{"type":"log","timestamp":1674521304049,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"5h7921k20uu7ds2","id":"5h7921k20uu7ds2"},"id":"r3ad6otdy3bpmzn","previousOperationId":"obgwr480cy9pj1k"}
{"type":"log","timestamp":1674521304055,"level":"debug","message":"Executing script testing (beforeRender)","meta":{"rootId":"5h7921k20uu7ds2","id":"5h7921k20uu7ds2"},"id":"iyh8sw6ckrsd80w","previousOperationId":"obgwr480cy9pj1k"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1674521304345,"id":"3m6uik0tva75zjy","previousEventId":"v4blc2ipxhamdmk","operationId":"5o3imcq5rzyodbk","previousOperationId":"obgwr480cy9pj1k"}
{"type":"operationStart","subtype":"script","name":"scripts testing","previousOperationId":"5o3imcq5rzyodbk","timestamp":1674521304346,"id":"jam1e489d44hrdm","previousEventId":"3m6uik0tva75zjy","operationId":"f3hns97091e0h0n"}
{"type":"log","timestamp":1674521304773,"level":"warn","message":"Error when processing render request 5\n(because) error when evaluating custom script /testing\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 67:25)\n\n  65 | async function fetchData(req,res) {\n  66 |    const r = await axios.get('http://localhost:3000/events')    \n> 67 |     req.data = { ...req.data, ...r.data}\n     |                         ^\n  68 | }\n  69 |\n  70 | // async function prepareDataSource() {\n\n(sandbox.js line 104:23)\n\n  102 | // add jsreport hook which modifies the report input data\n  103 | async function beforeRender(req, res) {\n> 104 |     req.data.events = await fetchData()\n      |                       ^\n  105 |     console.log(req.data.events)\n  106 | }\n\n\nTypeError: Cannot read properties of undefined (reading 'data')\n    at fetchData (sandbox.js:67:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Object.beforeRender (sandbox.js:104:23)\n    at async executionFn (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","meta":{"rootId":"5h7921k20uu7ds2","id":"5h7921k20uu7ds2"},"id":"ob8ad388n9q4xuz","previousOperationId":"f3hns97091e0h0n"}
{"type":"log","timestamp":1674521304773,"level":"warn","message":"Rendering request 5 finished with error in 758 ms","meta":{"rootId":"5h7921k20uu7ds2","id":"5h7921k20uu7ds2"},"id":"y405midawgedd31","previousOperationId":"f3hns97091e0h0n"}
{"type":"error","timestamp":1674521304796,"statusCode":400,"weak":true,"lineNumber":67,"decoratedSuffix":"\n\n(sandbox.js line 67:25)\n\n  65 | async function fetchData(req,res) {\n  66 |    const r = await axios.get('http://localhost:3000/events')    \n> 67 |     req.data = { ...req.data, ...r.data}\n     |                         ^\n  68 | }\n  69 |\n  70 | // async function prepareDataSource() {\n\n(sandbox.js line 104:23)\n\n  102 | // add jsreport hook which modifies the report input data\n  103 | async function beforeRender(req, res) {\n> 104 |     req.data.events = await fetchData()\n      |                       ^\n  105 |     console.log(req.data.events)\n  106 | }\n\n","entity":{"shortid":"W0gvNctphZ","name":"testing","content":"// Use the \"beforeRender\" or \"afterRender\" hook\n// to manipulate and control the report generation\nvar request = require(\"request\");\nconst http = require('http');\nconst axios = require('axios');\n\n// async function beforeRender (done) {\n//    request({url: \"http://localhost:3000/events\",json: true},function (err,response,body){\n//        request.data = {posts: body};\n//        console.log(request.data);\n//        done();\n//    })\n\n// }\n\n// function  beforeRender(req, res, done){\n//     console.log('hello');\n//     request({\n//         url:\"http://localhost:3000/events\",\n//          method: \"GET\",\n//         json:true,\n//         headers: {'User-Agent':'Super Agent/0.0.1','content-type': 'application/json','Content-Length': 92},\n//       },function(err, response, body){\n      \n//         console.log(body);\n//         req.data = {posts:body};\n//        console.log(req.data);\n//         console.log(err)\n//         done();\n//     })    \n// }\n\n// async function beforeRender(req, res, done) {\n//     request({\n//         url:\"http://localhost:3000/events/54\",\n//          method: \"GET\",\n//         json:true,\n//         headers: {'User-Agent':'Super Agent/0.0.1','content-type': 'application/json','Content-Length': 92},\n//       },function(err, response, body){\n//         if(err){\n//             console.log(err)\n//             done(err);\n//         }\n//         if(response.statusCode !== 200){\n//             console.log(response.statusCode)\n//             done(response.statusCode);\n//         }\n//         this.data = {posts:body};\n//         done();\n//     }.bind(this))    \n// }\n\n// function fetchOrders() {\n//     return new Promise((resolve, reject) => {\n//         axios.get('http://localhost:3000/events',\n//         (result) => {\n//             var str = '';\n//             result.on('data', (b) => str += b);\n//             result.on('error', reject);\n//             result.on('end', () => resolve(JSON.parse(str).value));\n//         });\n//     })\n// }\n\nasync function fetchData(req,res) {\n   const r = await axios.get('http://localhost:3000/events')    \n    req.data = { ...req.data, ...r.data}\n}\n\n// async function prepareDataSource() {\n//     const orders = await fetchOrders()\n//     const ordersByShipCountry = orders.reduce((a, v) => {\n//         a[v.ShipCountry] = a[v.ShipCountry] || []\n//         a[v.ShipCountry].push(v)\n//         return a\n//     }, {})\n\n//     return Object.keys(ordersByShipCountry).map((country) => {\n//         const ordersInCountry = ordersByShipCountry[country]\n\n//         const accumulated = {}\n\n//         ordersInCountry.forEach((o) => {\n//             o.OrderDate = new Date(o.OrderDate);\n//             const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n//             accumulated[key] = accumulated[key] || {\n//                 value: 0,\n//                 orderDate: o.OrderDate\n//             };\n//             accumulated[key].value++;\n//         });\n\n//         return {\n//             rows: ordersInCountry,\n//             country,\n//             accumulated\n//         }\n\n//     }).slice(0, 2)\n// }\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.events = await fetchData()\n    console.log(req.data.events)\n}"},"property":"content","logged":true,"previousOperationId":"f3hns97091e0h0n","id":"1qkkru1hz6ap4aa","stack":"TypeError: Cannot read properties of undefined (reading 'data')\n    at fetchData (sandbox.js:67:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Object.beforeRender (sandbox.js:104:23)\n    at async executionFn (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (C:\\Users\\Johan\\Desktop\\clases\\Proyecto\\Calendar-Event\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","message":"Error when evaluating custom script /testing\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 67:25)\n\n  65 | async function fetchData(req,res) {\n  66 |    const r = await axios.get('http://localhost:3000/events')    \n> 67 |     req.data = { ...req.data, ...r.data}\n     |                         ^\n  68 | }\n  69 |\n  70 | // async function prepareDataSource() {\n\n(sandbox.js line 104:23)\n\n  102 | // add jsreport hook which modifies the report input data\n  103 | async function beforeRender(req, res) {\n> 104 |     req.data.events = await fetchData()\n      |                       ^\n  105 |     console.log(req.data.events)\n  106 | }\n\n"}
