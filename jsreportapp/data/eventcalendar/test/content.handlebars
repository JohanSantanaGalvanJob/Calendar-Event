<!--
Invoice dynamically rendered into html using handlebars and converted into pdf
using chrome-pdf recipe. The styles are extracted into separate asset for
better readability and later reuse.

Data to this sample are mocked at the design time and should be filled on the
incoming API request.
!-->

<html>

<head>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/metro/4.1.5/css/metro.min.css">
    <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js'></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chartist/0.11.0/chartist.min.css">


    <style>
        .session {
            width: 450px;
            /* adjust this as needed to make the charts smaller */
            height: 400px;
            /* adjust this as needed to make the charts smaller */
            margin: 30px auto;
            /* center the charts horizontally and add some vertical margin */
            page-break-inside: avoid;
            /* prevent a session from overlapping two pages of the PDF */
            padding-top: 5%;
        }

        .ct-label {
            font-size: 12px;
            /* adjust this as needed to change the font size of the labels */
            fill: #000;
            /* adjust this as needed to change the color of the labels */
        }

        .ct-bar {
            stroke-width: 25px;
            /* adjust this as needed to change the width of the bars */
        }
    </style>
</head>

<body>
   <div>
        <canvas id="myChart"></canvas>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
    <script>
        // Assign the data to variables
        var location_id = [{{chart.repetion}}];
        var repetitions = [{{chart.repetition}}];

        // Create the chart using the data
        var ctx = document.getElementById('myChart').getContext('2d');

        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: location_id,
                datasets: [{
                    label: '# of Repetitions',
                    data: repetitions,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</body>

</html>